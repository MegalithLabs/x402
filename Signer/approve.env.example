# Megalith x402 Token Approval Configuration
# This file configures the token approval tool (approve.js)
# 
# Approval is required for standard ERC-20 tokens to work with MegalithStargate
# EIP-3009 tokens (like USDC) do NOT require approval
# 
# x402 Protocol: https://x402.org
# Documentation: https://github.com/MegalithLabs/x402
# Website: https://megalithlabs.ai

# ================ REQUIRED VARIABLES ================

# NETWORK - Blockchain network to use
# 56 = BNB Chain Mainnet
# 97 = BNB Chain Testnet
NETWORK=

# APPROVER_KEY - Private key of the token holder
# Format: 0x followed by 64 hexadecimal characters
# This wallet must hold the tokens you want to approve
# SECURITY: Never commit this file with real private keys to version control!
APPROVER_KEY=

# TOKEN - ERC-20 token contract address to approve
# Format: 0x followed by 40 hexadecimal characters
# This is the token you want to use for x402 payments
TOKEN=

# ================ OPTIONAL VARIABLES ================

# STARGATE_CONTRACT - MegalithStargate contract address
# Leave empty (recommended) to automatically fetch from API
# The script will retrieve the latest deployed version from:
#   https://x402.megalithlabs.ai/contracts
#
# Manual override example:
#   STARGATE_CONTRACT=0x40200001004B5110333e4De8179426971Efd034A
STARGATE_CONTRACT=

# AMOUNT - Approval amount
# Options:
#   "unlimited" = Maximum approval (recommended for convenience)
#   "1000.0"    = Specific amount in token units
#
# "unlimited" means the MegalithStargate contract can spend any amount
# of your tokens. You only need to approve once per token.
#
# Setting a specific amount means you'll need to re-approve when it runs out.
AMOUNT=unlimited

# FACILITATOR_API - Megalith x402 facilitator service endpoint
# Default: https://x402.megalithlabs.ai
# Only change this if running your own facilitator or testing locally
# FACILITATOR_API=http://localhost:3000

# ================ IMPORTANT NOTES ================

## When Do You Need Approval?
# ✅ Required: Standard ERC-20 tokens (e.g., USDT, most tokens)
# ❌ Not Required: EIP-3009 tokens (e.g., USDC)
#
# The signer.js script will tell you if approval is needed when you
# create a payment authorization.

## What Does Approval Do?
# Token approval allows the MegalithStargate contract to transfer
# tokens on your behalf when you create x402 payment authorizations.
#
# This is a standard ERC-20 pattern used by all DeFi protocols.
# The contract CANNOT move your tokens without a signed authorization
# from you (created with signer.js).

## Security Considerations
# Unlimited Approval:
#   ✅ Convenient (approve once, use forever)
#   ⚠️  The contract CAN spend unlimited tokens (with your signed authorization)
#   ✅ MegalithStargate is non-custodial and trust-minimized
#   ✅ Contract audited and open source
#
# Limited Approval:
#   ✅ More conservative (limits exposure)
#   ⚠️  Need to re-approve when amount runs out
#   ⚠️  More gas fees for repeated approvals

## How x402 Payments Work
# 1. Approve tokens (this script) - One time per token
# 2. Create payment authorization (signer.js) - Each payment
# 3. Send to facilitator or resource server
# 4. Facilitator settles payment on-chain
# 5. Tokens transferred from your wallet to recipient

## Trust Model
# You trust:
#   - MegalithStargate contract (audited, open source)
#   - Your own signed authorizations (you control the keys)
#
# You don't need to trust:
#   - The facilitator (cannot move funds without your signature)
#   - The recipient (cannot pull funds, only receive authorized amounts)

# ================ EXAMPLES ================

# Example 1: Approve USDT on BNB Mainnet (unlimited)
# NETWORK=56
# APPROVER_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
# TOKEN=0x55d398326f99059fF775485246999027B3197955
# STARGATE_CONTRACT=
# AMOUNT=unlimited

# Example 2: Approve custom token on BNB Testnet (limited amount)
# NETWORK=97
# APPROVER_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
# TOKEN=0xYourTokenAddressHere000000000000000000
# STARGATE_CONTRACT=
# AMOUNT=1000.0

# Example 3: Using specific Stargate contract
# NETWORK=56
# APPROVER_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
# TOKEN=0xYourTokenAddressHere000000000000000000
# STARGATE_CONTRACT=0x40200001004B5110333e4De8179426971Efd034A
# AMOUNT=unlimited

# ================ WORKFLOW ================

## Step-by-Step Usage:
# 1. Copy this file to approve.env
# 2. Fill in your NETWORK, APPROVER_KEY, and TOKEN
# 3. Run: npm run approve (or: node approve.js)
# 4. Confirm the approval transaction
# 5. Once approved, use signer.js to create payments

## After Approval:
# - You can create unlimited payment authorizations with signer.js
# - Each payment requires a new signature from you
# - The facilitator pays gas fees for settlement
# - Your tokens are only moved when YOU sign a payment authorization

# ================ TROUBLESHOOTING ================

## "Could not get Stargate contract address"
# - Check your internet connection
# - Try manually setting STARGATE_CONTRACT from x402.megalithlabs.ai/contracts
# - Verify FACILITATOR_API is accessible

## "Insufficient funds for gas"
# - You need BNB for gas fees (on BNB Chain)
# - Get testnet BNB from faucet for testing
# - Approval costs ~50,000 gas

## "Token version not available"
# - This is normal for some tokens
# - The script will still work correctly

# ================ NEED HELP? ================
# 
# Documentation: https://github.com/MegalithLabs/x402
# Website: https://megalithlabs.ai
# x402 Protocol: https://x402.org
# Support: support@megalithlabs.ai
